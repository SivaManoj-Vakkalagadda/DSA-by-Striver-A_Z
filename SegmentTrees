

int a[100005], seg[4*100005];

void build(int ind, int low ,int high){
  if(low == high) {
    seg[ind] = a[low];
    return;
  }
  
  int mid = (low+high)/2;
  build(2*ind+1,low,mid);
  build(2*ind+2,mid+1,high);
  seg[ind] = max(seg[2*ind+1],seg[2*ind+2]);
}

int query(int ind, int low ,int high, int l ,int r){
  // case 1
  if(low >= l && high <= r){
    return seg[ind];
  }
  // case 2
  else if(high < l || low > r){
    return INT_MIN;
  }
  // case 3
  else{
    int mid = (low+high)/2;
    int left = query(2*ind+1,low,mid,l,r);
    int right = query(2*ind+2,mid+1,high,l,r);
    return max(left,right);
  }
}


// For calling the function do call like this


 query(0,0,n-1,l,r); // n is the size of the array
                     // l is the left most range in which we want to search and r is the right most range
