int LowerBound(vector<long long> &arr, long long x) { //to find the lowest occurence of x
        int n = arr.size();
        long long int low = 0, high = n - 1;
        long long int index = -1; // Initialize to -1 to indicate no floor found

        while (low <= high) {
            long long int mid = low + (high - low) / 2; // Prevent overflow

            if (arr[mid] <= x) {
                index = mid;
                low = mid + 1; // Move right to find a larger valid floor
            } 
            else { // When arr[mid] >= x

                high = mid - 1; // Move left
            }
        }

        return index; // Returns index of the floor or -1 if not found
    }
